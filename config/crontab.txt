
#deploy on boot
@reboot cd Hacker_News_ETL/; sh bin/deploy.sh
#run four threads of the worker at once
@reboot  screen -dmS get_users bash -c "cd Hacker_News_ETL/; while true; do ./pan.sh -file=jobs/get_users.ktr | tee -a logs/get_users.log; done ";
@reboot  screen -dmS get_users bash -c "cd Hacker_News_ETL/; while true; do ./pan.sh -file=jobs/get_users.ktr | tee -a logs/get_users.log; done ";
@reboot  screen -dmS get_users bash -c "cd Hacker_News_ETL/; while true; do ./pan.sh -file=jobs/get_users.ktr | tee -a logs/get_users.log; done ";
@reboot  screen -dmS get_users bash -c "cd Hacker_News_ETL/; while true; do ./pan.sh -file=jobs/get_users.ktr | tee -a logs/get_users.log; done ";
#because get_users is a job that will be run on a handful of distributed EC2 instances, and we do not want those instances to thrash, execute the job through the hour.
1 * * * * screen -dmS get_users bash -c " sleep $[ ( $RANDOM % 3600 )  + 1 ]s; cd Hacker_News_ETL/; ./pan.sh -file=jobs/get_users.ktr | tee -a logs/get_users.log ";
